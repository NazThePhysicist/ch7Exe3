
# Exercise 1: Remove the first column from the data and scale
# it using the scale() function
> install.packages(c("cluster", "rattle.data", "NbClust"))


> data(wine, package = "rattle.data")
> summary(wine)

> head(wine)

> df <- scale(wine[-1])
> df
 
OR  > wine$Type <- NULL
       > head(wine)
       > scale(wine, center = TRUE, scale = TRUE)
# Method 1: A plot of the total within-groups sums of squares against the 
# number of clusters in a K-means solution can be helpful. A bend in the 
# graph can suggest the appropriate number of clusters.
wssplot <- function(data, nc=15, seed=1234){
	              wss <- (nrow(data)-1)*sum(apply(data,2,var))
               	      for (i in 2:nc){
		        set.seed(seed)
	                wss[i] <- sum(kmeans(data, centers=i)$withinss)}
	                
		      plot(1:nc, wss, type="b", xlab="Number of Clusters",
	                        ylab="Within groups sum of squares")
	   }
wssplot(df)

# Exercise 2:
#   * How many clusters does this method suggest?
#   * Why does this method work? What's the intuition behind it?
#   * Look at the code for wssplot() and figure out how it works
> wssplot(df)

# Method 2: Use the NbClust library, which runs many experiments
# and gives a distribution of potential number of clusters.
> library(NbClust)
> set.seed(1234)

> nc <- NbClust(df, min.nc = 2, max.nc = 15, method = "kmeans") 

> barplot(table(nc$Best.nc[1,]), xlab = "Number of Clusters", ylab = "Number of Criteria", main = "Number of Clusters Chosen by 26 Criteria")

OR 
> table(nc$Best.n[1,])

# Exercise 3: How many clusters does this method suggest? 3
# Exercise 4: Once you've picked the number of clusters, run k-means 
# using this number of clusters. Output the result of calling kmeans()
# into a variable fit.km
> fit.km  =  kmeans(df, centers = 3, iter.max  = 1000 )

> fit.km
> fit.km$size

# Now we want to evaluate how well this clustering does.

# Exercise 5: using the table() function, show how the clusters in fit.km$cluster
# compares to the actual wine types in wine$Type. Would you consider this a good
# clustering?

> table(wine$Type, fit.km$cluster)

# Exercise 6:
# * Visualize these clusters using  function clusplot() from the cluster library
# * Would you consider this a good clustering?
> library(cluster)
> clusplot(df, fit.km$cluster, color= TRUE, shade = TRUE)
> library(flexclust)
> randIndex(table(wine$Type, fit.km$cluster))

